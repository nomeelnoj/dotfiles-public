ldap_membership() {
  ldapsearch \
    -o ldif-wrap=no \
    -H "ldaps://${DOMAIN_CONTROLLER}:636" \
    -D "${DOMAIN_DN}" \
    -w "${DOMAIN_PASSWORD}" \
    -b "${DOMAIN_ROOT}" "(&(cn=*)(sAMAccountName=$1))" 'memberOf' | \
  grep -v 'requesting:' | \
  grep 'memberOf' | \
  awk '{print $2}'
}

function ldap_group() {
  ldapsearch \
    -o ldif-wrap=no \
    -H "ldaps://${DOMAIN_CONTROLLER}:636" \
    -D "${DOMAIN_DN}" \
    -w "${DOMAIN_PASSWORD}" \
    -b "${DOMAIN_ROOT}" "(&(cn=$1))" 'member' | \
  grep -v 'requesting:' | \
  grep 'member' | \
  cut -d " " -f2-
}

ldap_profile() {
  ldapsearch \
    -o ldif-wrap=no \
    -H "ldaps://${DOMAIN_CONTROLLER}:636" \
    -D "${DOMAIN_DN}" \
    -w "${DOMAIN_PASSWORD}" \
    -b "${DOMAIN_ROOT}" "(&(cn=*)(sAMAccountName=$1))" | \
  sed -n '/# requesting:/,/# search reference/p' |\
  grep -v '# search'
}

ldap_id() {
  ldapsearch \
    -o ldif-wrap=no \
    -H "ldaps://${DOMAIN_CONTROLLER}:636" \
    -D "${DOMAIN_DN}" \
    -w "${DOMAIN_PASSWORD}" \
    -b "${DOMAIN_ROOT}" "(&(cn=*)(sAMAccountName=$1))" 'mail' 'sAMAccountName' 'name' | \
  grep -E 'mail|sAMAccountName|name'
}

ldap_email() {
  ldapsearch \
    -o ldif-wrap=no \
    -H "ldaps://${DOMAIN_CONTROLLER}:636" \
    -D "${DOMAIN_DN}" \
    -w "${DOMAIN_PASSWORD}" \
    -b "${DOMAIN_ROOT}" "(&(cn=*)(mail=$1))" 'mail' 'sAMAccountName' 'name' | \
  grep -E 'mail|sAMAccountName|name'
}

ldap_public_key() {
  ldapsearch \
    -o ldif-wrap=no \
    -H ldaps://${DOMAIN_CONTROLLER}:636 \
    -D "${DOMAIN_DN}" \
    -w "${DOMAIN_PASSWORD}" \
    -b "${DOMAIN_ROOT}" "(&(cn=*)(sAMAccountName=$1))" 'sshPublicKey' | \
  grep -v 'requesting:' | \
  grep 'sshPublicKey' | \
  cut -d " " -f2-
}

ldap_membership_recursive() {
  ldapsearch \
    -o ldif-wrap=no \
    -H "ldaps://${DOMAIN_CONTROLLER}:636" \
    -D "${DOMAIN_DN}" \
    -w "${DOMAIN_PASSWORD}" \
    -b "${DOMAIN_ROOT}" \
    "(&(memberOf:1.2.840.113556.1.4.1941:=CN=$1,OU=Groups,${DOMAIN_ROOT}))" member \
    | grep -E '(dn|member)' \
    | sed -E 's/(dn|member): //g' \
    | sort -u
}

# TO DO: Work out the kinks in replacing the above with the below generic function
ldap_query() {
  set -x
  SEARCH="${1}"
  FILTER="${2}"
  QUERY="${3}"
  if [[ ${QUERY} == '' ]]; then
    if [[ "${SEARCH}" == *"@"* ]]; then
      local DEFAULT_FIELD='mail'
    else
      local DEFAULT_FIELD='sAMAccountName'
    fi
    QUERY="(&(cn=*)(${DEFAULT_FIELD}=${SEARCH}))"
  fi

  LDAP_RESULTS=$(
    ldapsearch \
      -o ldif-wrap=no \
      -H "ldaps://${DOMAIN_CONTROLLER}:636" \
      -D "${DOMAIN_DN}" \
      -w "${DOMAIN_PASSWORD}" \
      -b "${DOMAIN_ROOT}" \
         "${QUERY}" \
         ${FILTER}
  )

  if [[ "${FILTER}" != '' ]]; then
    echo "${LDAP_RESULTS}" |\
    grep -v 'requesting:' |\
    grep -E "^${FILTER}" |\
    awk -F':' '{print $2}' |\
    sed -e 's/^[ ]*//'
  else
    echo "${LDAP_RESULTS}"
  fi
}

# ldap_membership() { ldap_query "${1}" 'memberOf' }
# ldap_email() { ldap_query "${1}" 'sAMAccountName' }
# ldap_membership_full() { ldap_query '' '' "(&(cn=*)(sAMAccountName=${1}))" }
# ldap_group() { ldap_query '' 'member' "(&(cn=$1))" }
# ldap_public_key() { ldap_query "${1}" 'sshPublicKey' }
# ldap_email() { ldap_query '' "'mail' 'sAMAccountName' 'name'" "(&(cn=*)(mail=$1))" }

ldap_group_recursive() {
  DN=$( ldap_query '' 'dn' "(&(cn=$1))" )
  CN=$( echo $1 && ldap_query '' 'cn' "(&(objectClass=group)(memberOf:1.2.840.113556.1.4.1941:=${DN}))" )
  for CN in ${CN}; do
    echo "GROUP: ${CN}"
    ldap_group "${CN}"
  done
}

